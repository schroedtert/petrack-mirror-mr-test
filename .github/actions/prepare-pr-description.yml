name: "Prepare PR Description"
description: "Prepares the PR description for the GitLab MR"

inputs:
  pr_title:
    description: "The title of the PR"
    required: true
  pr_url:
    description: "The URL of the PR"
    required: true
  pr_description:
    description: "The body of the PR"
    required: true
  gitlab_project_id:
    description: "GitLab project ID"
    required: true
  gitlab_token:
    description: "GitLab private token"
    required: true
  pr_target_branch:
    description: "The target branch for the PR"
    required: true

runs:
  using: "composite"
  steps:
    - name: Prepare PR Description
      shell: bash
      run: |
        # Escape PR_DESCRIPTION using jq for JSON safety
        PR_DESCRIPTION_ESCAPED=$(jq -Rsa . <<< "${{ inputs.pr_description }}")

        # Fetch the GitLab MR template
        TEMPLATE_URL="https://gitlab.com/api/v4/projects/${{ inputs.gitlab_project_id }}/repository/files/.gitlab%2Fmerge_request_templates%2Fdefault.md/raw?ref=${{ inputs.pr_target_branch }}"
        TEMPLATE_CONTENT=$(curl --silent --header "PRIVATE-TOKEN: ${{ inputs.gitlab_token }}" "${TEMPLATE_URL}")

        # Ensure the template was fetched successfully
        if [ -z "$TEMPLATE_CONTENT" ]; then
          echo "Failed to fetch GitLab MR template"
          exit 1
        fi

        # Remove the first line of the template
        TEMPLATE_CONTENT=$(echo "${TEMPLATE_CONTENT}" | sed '1d')

        # Combine the PR description and the template content
        FULL_DESCRIPTION=$(printf "Automatically updated from GitHub PR: %s\n\n%s\n\n---\n\n%s" \
          "${{ inputs.pr_url }}" "$(echo $PR_DESCRIPTION_ESCAPED | jq -r)" "$TEMPLATE_CONTENT")

        # Escape the full description using jq for JSON safety
        FULL_DESCRIPTION_ESCAPED=$(jq -Rsa . <<< "$FULL_DESCRIPTION")

        echo "::set-output name=full_description::$FULL_DESCRIPTION_ESCAPED"
